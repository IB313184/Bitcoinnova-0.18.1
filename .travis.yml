language: cpp
cache:
 ccache: true
 directories:
    - /home/travis/toolchain

matrix:
  include:

  # Ubuntu, g++-8
  - os: linux
    dist: trusty
    compiler: gcc
    addons:
      apt:
        sources:
        - ubuntu-toolchain-r-test
        packages:
          - libboost1.55-all-dev
          - libssl-dev
          - g++-8
          - gcc-8
    env:
    - MATRIX_EVAL="CC=gcc-8 && CXX=g++-8"
    - LABEL="linux"
    - _DEPLOYABLE="true"
    - STRIP="strip"

  # Ubuntu, g++-7
  - os: linux
    dist: trusty
    compiler: gcc
    addons:
      apt:
        sources:
        - ubuntu-toolchain-r-test
        packages:
          - libboost1.55-all-dev
          - libssl-dev
          - g++-7
          - gcc-7
    env:
    - MATRIX_EVAL="CC=gcc-7 && CXX=g++-7"
    - LABEL="linux-g++-7"
    - STRIP="strip"

  # Ubuntu, clang-6
  - os: linux
    dist: trusty
    compiler: clang
    addons:
      apt:
        sources:
        - ubuntu-toolchain-r-test
        - llvm-toolchain-trusty-6.0
        packages:
          - libboost1.55-all-dev
          - libssl-dev
          - clang-6.0
          - libstdc++-7-dev
    env:
    - MATRIX_EVAL="CC=clang-6.0 && CXX=clang++-6.0"
    - LABEL="linux-clang-6"
    - STRIP="strip"

  # OSX, clang
  - os: osx
    osx_image: xcode10
    compiler: clang
    env:
    - MATRIX_EVAL="CC=/usr/local/opt/llvm@8/bin/clang && CXX=/usr/local/opt/llvm@8/bin/clang++"
    - LABEL="osx"
    - _DEPLOYABLE="true"
    - STRIP="strip"

  # Arm (aarch64) cross compile
  - os: linux
    dist: trusty
    env:
    - MATRIX_EVAL="CC=aarch64-linux-gnu-gcc && CXX=aarch64-linux-gnu-g++"
    - LABEL="aarch64"
    - _DEPLOYABLE="true"
    - STRIP="aarch64-linux-gnu-strip"

before_install:
- eval $MATRIX_EVAL

install:
# Need to uninstall oclint to get newer gcc installed https://github.com/travis-ci/travis-ci/issues/8826
- if [[ "${LABEL:0:3}" == "osx" ]]; then brew cask uninstall --force oclint || true ; fi

# Need a newer version of llvm to link against to get std::filesystem / std::experimental::filesystem
- if [[ "${LABEL:0:3}" == "osx" ]]; then travis_retry brew install llvm@8 || travis_retry brew upgrade llvm@8 ; fi
- if [[ "${LABEL:0:3}" == "osx" ]]; then travis_retry brew link --force llvm@8 ; fi
- if [[ "${LABEL:0:3}" == "osx" ]]; then ln -s /usr/local/opt/llvm@8 /usr/local/opt/llvm ; fi

# Need to make sure that we have openssl installed
- if [[ "${LABEL:0:3}" == "osx" ]]; then travis_retry brew install openssl || travis_retry brew upgrade openssl ; fi
- if [[ "${LABEL:0:3}" == "osx" ]]; then brew link --force openssl ; fi
- if [[ "${LABEL:0:3}" == "osx" ]]; then ln -s /usr/local/opt/openssl/include/openssl /usr/local/include ; fi

# Neeed to install ccache
- if [[ "${LABEL:0:3}" == "osx" ]]; then travis_retry brew install ccache ; fi
- if [[ "${LABEL:0:3}" == "osx" ]]; then export PATH="/usr/local/opt/ccache/libexec:$PATH" ; fi

script:
- eval $MATRIX_EVAL
# If we're cross compiling aarch64, make sure our build enivornment is setup
# we do this in the script stage because this happens after the repo is cloned
- if [[ "$LABEL" == "aarch64" ]]; then source scripts/prep-aarch64.sh ; fi
- mkdir build && cd build
- cmake -DARCH=default -DCMAKE_BUILD_TYPE=Release -DSTATIC=true ..
- make -j2
- if [[ "$LABEL" != "aarch64" ]]; then ./src/cryptotest ; fi

before_deploy:
- if [[ "${TRAVIS_TAG}" == "" ]]; then export TRAVIS_TAG=${TRAVIS_COMMIT} ; fi
- cd src
- TARGETS="Bitcoinnovad miner zedwallet Bitcoinnova-service zedwallet-beta cryptotest wallet-api"
- ${STRIP} ${TARGETS}
- rm -rf bitcoinnova-${TRAVIS_TAG}
- mkdir bitcoinnova-${TRAVIS_TAG}
- cp ${TARGETS} bitcoinnova-${TRAVIS_TAG}/
- cp ../../LICENSE bitcoinnova-${TRAVIS_TAG}/
- tar cvfz bitcoinnova-${TRAVIS_TAG}-${LABEL}.tar.gz bitcoinnova-${TRAVIS_TAG}/
- rm -rf builds
- mkdir builds
- cp bitcoinnova-${TRAVIS_TAG}-${LABEL}.tar.gz builds
- cd builds

deploy:
  - provider: releases
    api_key:
      secure: qlJD30MAn4DStKTv+SIZsdZ+3y6uIjApXNTPbFhh7ZPCl/1eFN0IxeLiDwBH/yWBz9ZXJq5P5J8B9FTEZDnHK+QO4vi22+mQlQasROrHypN0kUJR1GztO6Z4dkyJMPJOVOybTOUOKDcgaawV2BZmgmXLOttQZ6u1Sjrd6VYpHbXrgLlnMcPQJVkgREFx7RYIvpX+8mbiod4G7F3v9z4qKVtuNHrv7DhqZIirpHiZTPc42RlAGOEHQsxqmUrWawat2bkAfKclRTGuoAg0ptbCmfSrecnBP4D3oqylVlXld9RmcziuEYWHjxusvsbhRNwSUNtKVm/sorr/girXzT40GYfv/iTdSzg8XPFmv5IRzZ5VB1sqgYbbbZT2SXCIrEQ5O0QguNM0GxpFu0zfHYgtmEtPzazy2bkSXeVvSlzjUf7dc52kPN0h0QqkBRPvcIzxE0D93+zSuNZK7oboRUbx8vz23zt3n41Ve2Nh/k+ctV5FLmpV8FIvQSbxrwjiGYIQ0MupvHGsu9hbH7lKazSRPZhIGwDmN8cBPBDeF6PtSeLpaR3JQa9m+U06J3xDlB3aSIpLlvU5YXR9yluG87CiSeAl0JoM1f0uKCZbg7+itGfge0Wy4L9DQ9k2luyvyhuLWxfHSh4pAj4AtAfqWk7vSUYa2yT2skdPML+iwH/4Lus=
    file:
      - bitcoinnova-${TRAVIS_TAG}-${LABEL}.tar.gz
    skip_cleanup: true
    on:
      repo: IB313184/Bitcoinnova-0.18.1
      tags: true
      condition: "$_DEPLOYABLE = true"
